name: Django CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
  DATABASE_USER: ${{ secrets.DATABASE_USER }}
  DATABASE_PASS: ${{ secrets.DATABASE_PASS }}
  DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
  DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
  SECRET_KEY: ${{ secrets.SECRET_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:12.11
        env:
          POSTGRES_USER: ${{ secrets.DATABASE_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASS }}
          POSTGRES_DB: ${{ secrets.DATABASE_NAME }}
          port: ${{ secrets.DATABASE_PORT }}
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    
    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.8]

    steps:
    - name: Checkout do código fonte
      uses: actions/checkout@v3

    - name: Configurar Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Instalar pip
      run: python -m pip install --upgrade pip

    - name: Instalar requirements.txt
      run: pip install -r requirements.txt

    - name: Rodar testes
      run: coverage run manage.py test

    - name: Relatório do coverage
      run: coverage report -m --skip-covered